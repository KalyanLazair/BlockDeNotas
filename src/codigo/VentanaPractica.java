/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;

/**
 *
 * @author Marta
 */
public class VentanaPractica extends javax.swing.JFrame {
    
    //boolean reescribir=false;

   
    public VentanaPractica() {
        initComponents();
        jDialog2.setSize(400,400);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jFileChooser1 = new javax.swing.JFileChooser();
        jDialog2 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Guardar = new javax.swing.JMenuItem();
        Cargar = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("El archivo ya existe. Quieres reescribirlo?");

        jButton1.setText("Aceptar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jMenu1.setText("File");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu1MousePressed(evt);
            }
        });

        Guardar.setText("Guardar");
        Guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GuardarMousePressed(evt);
            }
        });
        jMenu1.add(Guardar);

        Cargar.setText("Cargar");
        Cargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                CargarMousePressed(evt);
            }
        });
        jMenu1.add(Cargar);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MousePressed
    
    }//GEN-LAST:event_jMenu1MousePressed

    private void GuardarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GuardarMousePressed
        //Necesitamos saber si el usuario ha presionado cancelar o guardar.
        int seleccion= jFileChooser1.showSaveDialog(this);

        
        if(seleccion==JFileChooser.APPROVE_OPTION){
          //Si llego aquí es que el usuario ha pulsado en guardar cuando ha salido el menú de jFileChooser.
          //Tenemos la opción de guardar la imagen del buffer sobre un fichero.
          File fichero= jFileChooser1.getSelectedFile();
          String nombre= fichero.getName();
          //Necesitamos saber si es un png o un jpg. La extensión, para poder guardarlo y que no de error.
          String extension=nombre.substring(nombre.lastIndexOf('.')+1);
          
          String texto=jTextArea1.getText();
          texto=texto.replaceAll("(?!\\r)\\n","\r\n"); //reemplaza el reggex del block de notas por el salto de linea para que el buffer pueda leerlo
          
          if(extension.equalsIgnoreCase("txt") || extension.equalsIgnoreCase("doc")){
            
            try{
                if(!fichero.exists()){
                  FileWriter fr=new FileWriter(fichero, true);
                  BufferedWriter bw=new BufferedWriter(fr);
                               
                  bw.write(texto);
                  bw.close();
                  
                }else if(fichero.exists()){
                  jDialog2.setVisible(true);
                }
              
              
            }catch(IOException e){
              System.out.println("no se ha podido guardar el archivo"); 
            }
          }
        }
    
    }//GEN-LAST:event_GuardarMousePressed

    private void CargarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CargarMousePressed

        int seleccion= jFileChooser1.showOpenDialog(this);
        
        if(seleccion==JFileChooser.APPROVE_OPTION){
          //Si llego aquí es que el usuario ha pulsado en guardar cuando ha salido el menú de jFileChooser.
          //Tenemos la opción de guardar la imagen del buffer sobre un fichero.
          File fichero= jFileChooser1.getSelectedFile();
          String nombre= fichero.getName();
          //Necesitamos saber si es un png o un jpg. La extensión, para poder guardarlo y que no de error.
          String extension=nombre.substring(nombre.lastIndexOf('.')+1);
         // BufferedImage imagen=null;
          if(extension.equalsIgnoreCase("txt") || extension.equalsIgnoreCase("doc")){
              
            try{
              FileReader fr=new FileReader(fichero);
              BufferedReader br=new BufferedReader(fr);
              
              //Esta sección de código limpia el texto que hubiese antes de abrir un archivo nuevo.
              if(jTextArea1.getText() != null){
                jTextArea1.setText("");
              }
              
              String linea=br.readLine();
  
              while(linea != null){
                jTextArea1.append(linea + '\n');
                linea=br.readLine();
              }
            }
            catch(IOException e){
                System.out.println("no se ha podido abrir el archivo");
            }
            }
            
                 
          }
    }//GEN-LAST:event_CargarMousePressed

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        //botón aceptar en ventana de comprobación de sobre-escritura.
        //Necesitamos saber si el usuario ha presionado cancelar o guardar.
        int seleccion= jFileChooser1.showSaveDialog(this);

        
        if(seleccion==JFileChooser.APPROVE_OPTION){
          //Si llego aquí es que el usuario ha pulsado en guardar cuando ha salido el menú de jFileChooser.
          //Tenemos la opción de guardar la imagen del buffer sobre un fichero.
          File fichero= jFileChooser1.getSelectedFile();
          String nombre= fichero.getName();
          //Necesitamos saber si es un png o un jpg. La extensión, para poder guardarlo y que no de error.
          String extension=nombre.substring(nombre.lastIndexOf('.')+1);
          
          String texto=jTextArea1.getText();
          texto=texto.replaceAll("(?!\\r)\\n","\r\n"); //reemplaza el reggex del block de notas.
          
          if(extension.equalsIgnoreCase("txt") || extension.equalsIgnoreCase("doc")){
            
            try{
                
              FileWriter fr=new FileWriter(fichero);
              BufferedWriter bw=new BufferedWriter(fr);
              
              bw.write(texto);
              bw.newLine();
              bw.close();
                
              
              
            }catch(IOException e){
              System.out.println("no se ha podido guardar el archivo"); 
            }
          }
        }
    
        
        
        jDialog2.setVisible(false);
    }//GEN-LAST:event_jButton1MousePressed

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        jDialog2.setVisible(false);
        jFileChooser1.setVisible(false);
    }//GEN-LAST:event_jButton2MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPractica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPractica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPractica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPractica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPractica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Cargar;
    private javax.swing.JMenuItem Guardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
